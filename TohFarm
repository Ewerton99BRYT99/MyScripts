(function()local A=game:GetService("Players")local B=game:GetService("TeleportService")local C=game:GetService("HttpService")Settings=Settings or {ServerHop=5,StudsUp=8,EnableTeleport=true}local D=A.LocalPlayer local E=D.Character or D.CharacterAdded:Wait() local F=E:WaitForChild("HumanoidRootPart")local function G()if not Settings.EnableTeleport then return end local H=workspace:WaitForChild("tower"):WaitForChild("sections")local I=H:FindFirstChild("finish")if I and I:IsA("Model")then local J=I:FindFirstChild("start")if J and J:IsA("BasePart")then F.CFrame=J.CFrame+Vector3.new(0,Settings.StudsUp,0)task.delay(Settings.ServerHop,function()local K={}local L=""local M,N repeat M,N=pcall(function()return C:JSONDecode(game:HttpGet(string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100%s",game.PlaceId,L~=""and"&cursor="..L or"")))end)if M and N and N.data then for _,O in ipairs(N.data)do if O.playing<O.maxPlayers and O.id~=game.JobId then table.insert(K,O.id)end end L=N.nextPageCursor or""else break end until L==""or#K>=5 if #K>0 then B:TeleportToPlaceInstance(game.PlaceId,K[math.random(1,#K)],D)else B:Teleport(game.PlaceId,D)end end)end end end G()end)()
